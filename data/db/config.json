{
    "project_dir": "/Users/dy/cc",
    "solver": "Solver.cpp",
    "generator": "Generator.py",
    "jurger": "Jurger.cpp",
    "editor": "/usr/local/bin/code",
    "parallel": 1,
    "refresh_rate": 10,
    "languages": [
        {
            "name": "C++",
            "suffix": ".cpp",
            "template": "\n#include \"debug.h\"\n\nvoid solve(int it) {}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(&cout);\n    int n; cin >> n;\n    for (int i = 0; i < n; ++i) {\n        int x, y;\n        cin >> x >> y;\n        cout << x + y << '\\n';\n    }\n    return 0;\n}\n",
            "debug": "c++ -Iinclude -std=c++17 -g -Wall -DDEBUG -fsanitize=address -fsanitize=undefined -o {}.exe {}.cpp",
            "release": "/usr/bin/c++ -I/Users/dy/cc/include -std=c++17 -O2 -o {}.exe {}.cpp",
            "run": "{}.exe"
        },
        {
            "name": "Python",
            "suffix": ".py",
            "template": "\nimport random\nn = int(1e6)\nprint(n)\nfor _ in range(n):\n    x = random.randint(0, 10)\n    y = random.randint(0, 10)\n    print(x, y)\n",
            "debug": "",
            "release": "",
            "run": "/opt/homebrew/bin/python3 {}.py"
        },
        {
            "name": "TXT",
            "suffix": ".txt",
            "template": "",
            "debug": "",
            "release": "",
            "run": ""
        }
    ],
    "tags": [
        "*",
        "Graph Theory",
        "Greedy",
        "Math",
        "Heuristic",
        "Dynamic Programming",
        "Data Structure",
        "Binary Search",
        "Backtracking"
    ],
    "bytes_per_page": 100000,
    "bytes_per_cell": 1000,
    "bytes_per_read": 1000000,
    "rows_per_page": 100,
    "build_debug": true,
    "build_release": false,
    "build_asneed": false,
    "run_inshell": true,
    "submit_code": true,
    "submit_data": false,
    "submit_withmain": true,
    "log_level": "DEBUG",
    "exe_dump_delay": 1,
    "exe_warm_delay": 2,
    "font": "JetBrains Mono,12",
    "graphviz": "/opt/homebrew/bin/dot"
}